//
//
//

// const 최솟값_찾기 = (배열: number[] = []) => {
//     let 최솟값 = Number.MAX_VALUE
//     for (const 값 of 배열) {
//         if (최솟값 > 값) {
//             최솟값 = 값
//         }
//     }
//
//     return 최솟값
// }


/**
 * 선택 정렬은 제자리(in-place) 비교 정렬이다.
 * 복잡도는 O(n2) => 루프를 2번 돈다는 것
 * 1. 값을 하나씩 선택한다
 * 2. 최솟값을 찾는다.
 * 3. 선택한 값과 최솟값을 맞바꾼다
 */
const 선택정렬 = (배열: number[] = []): number[] => {
    // 1. 값을 하나씩 선택한다
    for (let 선택한_인덱스 = 0; 선택한_인덱스 < 배열.length; 선택한_인덱스++) {
        let 최솟값_인덱스 = 선택한_인덱스
        for (let 비교할_인덱스 = 선택한_인덱스 + 1; 비교할_인덱스 < 배열.length; 비교할_인덱스++) {
            const 선택값 = 배열[최솟값_인덱스]
            const 비교값 = 배열[비교할_인덱스]
            if (선택값 > 비교값) {
                최솟값_인덱스 = 비교할_인덱스 // 2. 최솟값을 찾는다.
            }
        }

        // 3. 선택한 값과 최솟값을 맞바꾼다
        const 최솟값 = 배열[최솟값_인덱스]
        배열[최솟값_인덱스] = 배열[선택한_인덱스]
        배열[선택한_인덱스] = 최솟값
    }

    return 배열
}

const 데이터_배열 = [9, 8, 7, 1, 2, 5, 6, 3, 4]
console.log(선택정렬(데이터_배열))